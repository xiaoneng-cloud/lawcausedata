"""Update LegalRegulation model and add versioning support

Revision ID: 45380083bbdd
Revises: ff32d386e740
Create Date: 2025-04-03 14:19:32.441579

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '45380083bbdd'
down_revision = 'ff32d386e740'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('legal_regulation_version',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('regulation_id', sa.Integer(), nullable=False),
    sa.Column('version_number', sa.String(length=50), nullable=True),
    sa.Column('revision_date', sa.DateTime(), nullable=True),
    sa.Column('effective_date', sa.DateTime(), nullable=True),
    sa.Column('publish_date', sa.DateTime(), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=True),
    sa.Column('changes_summary', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['regulation_id'], ['legal_regulation.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('legal_regulation', schema=None) as batch_op:
        batch_op.add_column(sa.Column('issuing_authority', sa.String(length=100), nullable=True))
        batch_op.add_column(sa.Column('publish_date', sa.DateTime(), nullable=True))
        batch_op.add_column(sa.Column('validity_status', sa.String(length=50), nullable=True))
        batch_op.add_column(sa.Column('original_enactment_date', sa.DateTime(), nullable=True))
        batch_op.add_column(sa.Column('latest_revision_date', sa.DateTime(), nullable=True))
        batch_op.add_column(sa.Column('current_version_id', sa.Integer(), nullable=True))
        batch_op.drop_column('publish_date')
        batch_op.drop_column('document_number')
        batch_op.drop_column('revision_date')
        batch_op.drop_column('approved_by')
        batch_op.drop_column('issued_by')
        batch_op.drop_column('status')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('legal_regulation', schema=None) as batch_op:
        batch_op.add_column(sa.Column('status', sa.VARCHAR(length=20), nullable=True))
        batch_op.add_column(sa.Column('issued_by', sa.VARCHAR(length=100), nullable=True))
        batch_op.add_column(sa.Column('approved_by', sa.VARCHAR(length=100), nullable=True))
        batch_op.add_column(sa.Column('revision_date', sa.DATETIME(), nullable=True))
        batch_op.add_column(sa.Column('document_number', sa.VARCHAR(length=100), nullable=True))
        batch_op.add_column(sa.Column('publish_date', sa.DATETIME(), nullable=True))
        batch_op.drop_column('current_version_id')
        batch_op.drop_column('latest_revision_date')
        batch_op.drop_column('original_enactment_date')
        batch_op.drop_column('validity_status')
        batch_op.drop_column('publish_date')
        batch_op.drop_column('issuing_authority')

    op.drop_table('legal_regulation_version')
    # ### end Alembic commands ###
